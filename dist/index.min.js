"use strict";class PNGArrays{static toPNG(array,{alpha:alpha=!1,file:file=!1,lDecZeroes:lDecZeroes=!0,width:width=Math.ceil(Math.sqrt(array.length*(alpha?3:4))),capacity:capacity=1}={}){array=array.constructor==Uint8ClampedArray?array:this.prepareExportData(array,capacity,lDecZeroes);const height=Math.ceil(array.length/(alpha?4:3)/width);if(file)return new Promise((resolve,reject)=>{const PNG=new this.pngjs2({width:width,height:height}),imgData=new Uint8ClampedArray(array.length/3*4);if(alpha)PNG.data=Buffer.from(array);else{for(let i=0;i<array.length/3;i++)imgData[4*i]=array[3*i],imgData[4*i+1]=array[3*i+1],imgData[4*i+2]=array[3*i+2],imgData[4*i+3]=255;PNG.data=Buffer.from(imgData)}const opti=new this.optipng(["-o7"]),pngStream=PNG.pack(),writeStream=this.fs.createWriteStream(file.replace(/\.png$/,"")+".png");pngStream.pipe(opti).pipe(writeStream),writeStream.on("finish",()=>resolve())});{const canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;const context=canvas.getContext("2d"),imgData=context.getImageData(0,0,canvas.width,canvas.height);if(alpha){for(let i=0;i<array.length;i++)imgData.data[i]=array[i];context.putImageData(imgData,0,0)}else{for(let i=0;i<array.length/3;i++)imgData.data[4*i]=array[3*i],imgData.data[4*i+1]=array[3*i+1],imgData.data[4*i+2]=array[3*i+2],imgData.data[4*i+3]=255;context.putImageData(imgData,0,0)}return canvas}}static fromPNG(data,{alpha:alpha=!1,capacity:capacity=1}={}){if("string"==typeof data)return new Promise((resolve,reject)=>{this.fs.createReadStream(data).pipe(new this.pngjs2({filterType:4})).on("parsed",function(){let stringRepresentation="";for(let i=0;i<this.data.length/4;i++){let pixelString="";if(alpha)for(let c=0;c<4;c++)pixelString+=this.data[4*i+c].toString(16).padStart(2,0);else for(let c=0;c<3;c++)pixelString+=this.data[4*i+c].toString(16).padStart(2,0);stringRepresentation+=pixelString}const values=stringRepresentation.split("f");values.shift();for(let i=0;i<values.length;i++)values[i]=PNGArrays.hexToNum(values[i],capacity);resolve(values)})});{data=data.constructor==Uint8ClampedArray?data:this.prepareImportData(data);let stringRepresentation="";for(let i=0;i<data.length/4;i++){let pixelString="";if(alpha)for(let c=0;c<4;c++)pixelString+=data[4*i+c].toString(16).padStart(2,0);else for(let c=0;c<3;c++)pixelString+=data[4*i+c].toString(16).padStart(2,0);stringRepresentation+=pixelString}const values=stringRepresentation.split("f");values.shift();for(let i=0;i<values.length;i++)values[i]=this.hexToNum(values[i]);return values}}static prepareExportData(array,capacity,lDecZeroes=!0){const data=[];let remainder="";for(let i=0;i<array.length;i++){const parts=(remainder+this.numToHex(array[i],capacity,lDecZeroes)).match(/.{1,2}/g),length=parts.length;for(let p=0;p<length;p++)2==parts[0].length&&data.push(parseInt(`0x${parts.shift()}`));remainder=parts[0]||""}for(;data.length%3;)data.push(0);return new Uint8ClampedArray(data)}static prepareImportData(img){const canvas=document.createElement("canvas");canvas.height=img.height,canvas.width=img.width;const context=canvas.getContext("2d");return context.drawImage(img,0,0),context.getImageData(0,0,canvas.width,canvas.height).data}static hexToNum(hex,capacity=1,lDecZeroes=!0){if("00000"==hex)return 0;if(void 0===hex)return 0;const positive=2==capacity?parseInt(hex.slice(0,2),15)>=112:parseInt(hex[0],16)>=8,metaOffset=capacity+(lDecZeroes?1:0),meta=hex.slice(0,metaOffset);let valuesIn;hex=hex.replace(meta,""),valuesIn=2==capacity?parseInt(meta.slice(0,2),15)-((positive?112:0)-1):parseInt(meta[0],15)-(positive?8:0)+1;let right="";const left=hex.slice(0,valuesIn)||"0",leadingDecZeroes=lDecZeroes?parseInt(meta.slice(capacity,metaOffset),15):0;return 0==capacity?parseFloat("0."+"0".repeat(leadingDecZeroes)+parseInt(hex.slice(valuesIn,hex.length),15)):(left.length<hex.length&&(right="."+"0".repeat(leadingDecZeroes)+parseInt(hex.slice(valuesIn,hex.length),15)),(positive?1:-1)*parseFloat(parseInt(left,15)+right))}static numToHex(num,capacity=1,lDecZeroes=!0){let sign,leadingDecZeroes="0";if(sign=2==capacity?num>0?112:0:num>0?8:0,num=Math.abs(num),!Number.isInteger(num)){if(/\.0{17}$/.test(num.toFixed(17)))return"F"+sign.toString(15)+"0000";let left;if(2==capacity)left=parseInt(num).toString(15);else{const cap=2562890624;left=Math.min(parseInt(num),cap).toString(15)}const rightString=num.toString().split(".")[1];leadingDecZeroes=Math.min(/^0*/.exec(rightString)[0].length,15).toString(15).padStart(lDecZeroes?1:0,0);const right=parseInt(rightString).toString(15);sign+=left.length-1;let meta="F"+(0==capacity?"":sign.toString(15).padStart(capacity,0));return lDecZeroes&&(meta+=leadingDecZeroes),meta+left+right}sign+=num.toString(15).length-1;let meta="F"+(0==capacity?"":sign.toString(15).padStart(capacity,0));return lDecZeroes&&(meta+=leadingDecZeroes),meta+num.toString(15)}static normalize(data){let minVal=1/0,maxVal=-1/0;for(let i=0;i<data.length;i++)data[i]<minVal&&(minVal=data[i]),data[i]>maxVal&&(maxVal=data[i]);if(-1*minVal+maxVal!=0)for(let i=0;i<data.length;i++)data[i]=(data[i]+-1*minVal)/(-1*minVal+maxVal);else for(let i=0;i<data.length;i++)data[i]=.5;return{minVal:minVal,maxVal:maxVal}}static unnormalize(data,minVal,maxVal){if(maxVal-minVal==0)for(let i=0;i<data.length;i++)data[i]=(data[i]+.5)*minVal;for(let i=0;i<data.length;i++)data[i]=data[i]*(-1*minVal+maxVal)- -1*minVal}static downloadImage(canvas,{name:name="image"}){const link=document.createElement("a");link.download=`${name}.png`,canvas.toBlob(blob=>{link.href=URL.createObjectURL(blob),link.click()},"image/png",1)}}"undefined"!=typeof window?(window.exports=window.exports||{},window.PNGArrays=PNGArrays):(PNGArrays.fs=require("fs"),PNGArrays.pngjs2=require("pngjs2").PNG,PNGArrays.optipng=require("optipng")),exports.PNGArrays=PNGArrays;
//# sourceMappingURL=index.min.js.map