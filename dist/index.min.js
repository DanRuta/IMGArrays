"use strict";class PNGArrays{static toPNG(array,{alpha:alpha=!1,file:file=!1}={}){array=array.constructor==Uint8ClampedArray?array:this.prepareExportData(array);const height=Math.ceil(array.length/(alpha?4:3)/1e3);if(file)return new Promise((resolve,reject)=>{const PNG=new this.pngjs2({width:1e3,height:height}),imgData=new Uint8ClampedArray(array.length/3*4);if(alpha)PNG.data=Buffer.from(array);else{for(let i=0;i<array.length/3;i++)imgData[4*i]=array[3*i],imgData[4*i+1]=array[3*i+1],imgData[4*i+2]=array[3*i+2],imgData[4*i+3]=255;PNG.data=Buffer.from(imgData)}const opti=new this.optipng(["-o7"]);PNG.pack().pipe(opti).pipe(this.fs.createWriteStream(file.replace(/\.png$/,"")+".png")),resolve()});{const canvas=document.createElement("canvas");canvas.width=1e3,canvas.height=height;const context=canvas.getContext("2d"),imgData=context.getImageData(0,0,canvas.width,canvas.height);if(alpha)context.putImageData(array,0,0);else{for(let i=0;i<array.length/3;i++)imgData.data[4*i]=array[3*i],imgData.data[4*i+1]=array[3*i+1],imgData.data[4*i+2]=array[3*i+2],imgData.data[4*i+3]=255;context.putImageData(imgData,0,0)}return canvas}}static fromPNG(data,{alpha:alpha=!1}={}){if("string"==typeof data)return new Promise((resolve,reject)=>{this.fs.createReadStream(data).pipe(new this.pngjs2({filterType:4})).on("parsed",function(){let stringRepresentation="";for(let i=0;i<this.data.length/4;i++){let pixelString="";if(alpha)for(let c=0;c<4;c++)pixelString+=this.data[4*i+c].toString(16).padStart(2,0);else for(let c=0;c<3;c++)pixelString+=this.data[4*i+c].toString(16).padStart(2,0);stringRepresentation+=pixelString}const values=stringRepresentation.split("f");values.shift();for(let i=0;i<values.length;i++)values[i]=PNGArrays.hexToNum(values[i]);resolve(values)})});{data=data.constructor==Uint8ClampedArray?data:this.prepareImportData(data);let stringRepresentation="";for(let i=0;i<data.length/4;i++){let pixelString="";if(alpha)for(let c=0;c<4;c++)pixelString+=data[4*i+c].toString(16).padStart(2,0);else for(let c=0;c<3;c++)pixelString+=data[4*i+c].toString(16).padStart(2,0);stringRepresentation+=pixelString}const values=stringRepresentation.split("f");values.shift();for(let i=0;i<values.length;i++)values[i]=this.hexToNum(values[i]);return values}}static prepareExportData(array){const data=[];let remainder="";for(let i=0;i<array.length;i++){const parts=(remainder+this.numToHex(array[i])).match(/.{1,2}/g),length=parts.length;for(let p=0;p<length;p++)2==parts[0].length&&data.push(parseInt(`0x${parts.shift()}`));remainder=parts[0]||""}for(;data.length%3;)data.push(0);return new Uint8ClampedArray(data)}static prepareImportData(img){const canvas=document.createElement("canvas");canvas.height=img.height,canvas.width=img.width;const context=canvas.getContext("2d");return context.drawImage(img,0,0),context.getImageData(0,0,canvas.width,canvas.height).data}static hexToNum(hex){if("00000"==hex)return 0;if(void 0===hex)return 0;const positive=parseInt(hex[0],16)>=7,valuesIn=parseInt(hex[0],15)-(positive?6:-1),leadingDecZeroes=parseInt(hex.slice(1,3),15),left=hex.slice(3,3+valuesIn);let right="";return left.length+3<hex.length&&(right="."+"0".repeat(leadingDecZeroes)+parseInt(hex.slice(3+valuesIn,hex.length),15)),(positive?1:-1)*parseFloat(parseInt(left,15)+right)}static numToHex(num){let sign=num>0?7:0,leadingDecZeroes="00";if(num!==parseInt(num)){if(/\.0{17}$/.test(num.toFixed(17)))return"F"+sign.toString(15)+"0000";const cap=2562890624,left=Math.min(parseInt(num),cap).toString(15),rightString=num.toString().split(".")[1];leadingDecZeroes=Math.min(/^0*/.exec(rightString)[0].length,15).toString(15).padStart(2,0);const right=parseInt(rightString).toString(15);let final="F"+(sign+=left.length-1).toString(15)+leadingDecZeroes+left+right;return final.length%2!=0&&(final="F"+sign.toString(15)+leadingDecZeroes+"0"+left+right),final}let final="F"+(sign+=num.toString().length).toString(15)+leadingDecZeroes+num.toString(15);return final.length%2!=0&&(final="F"+sign.toString(15)+leadingDecZeroes+"0"+num.toString(15)),final}}"undefined"!=typeof window?(window.exports=window.exports||{},window.PNGArrays=PNGArrays):(PNGArrays.fs=require("fs"),PNGArrays.pngjs2=require("pngjs2").PNG,PNGArrays.optipng=require("optipng")),exports.PNGArrays=PNGArrays;
//# sourceMappingURL=index.min.js.map